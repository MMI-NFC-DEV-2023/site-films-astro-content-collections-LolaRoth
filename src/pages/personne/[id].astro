---
import LinkFilm from "@components/LinkFilm.astro";
import Layout from "@layouts/Layout.astro";
import { getCollection, render } from "astro:content";
import { formatDate } from "src/helpers";
// 1. Génére un nouveau chemin pour chaque entrée de collection
export async function getStaticPaths() {
  const personne = await getCollection("personne");
  return personne.map((personne) => ({
    params: { id: personne.id },
    props: { personne },
  }));
}
// 2. Pour votre modèle, vous pouvez obtenir l'entrée directement à partir de la propriété
const { personne } = Astro.props;
const { Content } = await render(personne);
const professions = personne.data.profession && [
  ...new Set(personne.data.profession),
];

const filmRealises = [...(await getCollection("film"))].filter(
  (film) => film.data?.realisateur?.id === personne.id
);
---

<Layout pageTitle={`Fiche de ${personne.data.nom}`}>
  <h1>{personne.data.nom}</h1>
  <p>Lieu de naissance : {personne.data.lieuNaissance}</p>
  <p>Date de naissance : {formatDate(personne.data.dateNaissance)}</p>
  {
    personne.data.dateDeces && (
      <p>Date de décès : {formatDate(personne.data.dateDeces)} </p>
    )
  }

  {
    professions && (
      <p>
        Profession{professions.length > 1 && <>s</>} :{" "}
        {professions.join(", ").replace(/, ([^,]*)$/, " et $1")}
      </p>
    )
  }
    {
        filmRealises.length > 0 && (
        <>
            <h2>Films réalisés</h2>
            <ul>
            {filmRealises.map((film) => (
                <li>
                <LinkFilm {...film} />
                </li>
            ))}
            </ul>
        </>
        )
    }
  <div class="prose">
    <Content />
  </div>
</Layout>
